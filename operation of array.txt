#include<iostream>
using namespace std;

void printArray(int arr[], int size) {
    for(int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}


int searchElement(int arr[], int size, int key) {
    for(int i = 0; i < size; i++) {
        if(arr[i] == key) {
            return i; 
        }
    }
    return -1; 
}

void insertElement(int arr[], int &size, int element, int position, int capacity) {
    if(size >= capacity) {
        cout << "Array is full!" << std::endl;
        return;
    }
    for(int i = size; i > position; i--) {
        arr[i] = arr[i - 1];
    }
    arr[position] = element;
    size++;
}

void deleteElement(int arr[], int &size, int position) {
    if(position >= size || position < 0) {
        cout << "Invalid position!" << endl;
        return;
    }
    for(int i = position; i < size - 1; i++) {
        arr[i] = arr[i + 1];
    }
    size--;
}



void Sort(int arr[], int size) {
    for(int i = 0; i < size - 1; i++) {
        for(int j = 0; j < size - i - 1; j++) {
            if(arr[j] > arr[j + 1]) {
                std::swap(arr[j], arr[j + 1]);
            }
        }
    }
}

int search(int arr[], int size, int x){
    for(int i=0; i<size; i++)
    {
        if(arr[i]==x)
        return i;
    }
    return -1;
    
}

int main() {
    const int capacity = 100; 
    int arr[capacity] = {5, 8, 12, 7, 3};
    int size = 5;

    cout << "Original array: ";
    printArray(arr, size);

    // Insert
    insertElement(arr, size, 10, 2, capacity);
    cout << "After insertion: ";
    printArray(arr, size);

    // Delete
    deleteElement(arr, size, 3);
    cout << "After deletion: ";
    printArray(arr, size);

    // Sort
    Sort(arr, size);
    cout << "Sorted array: ";
    printArray(arr, size);

    
   
    int x = 12;
     size= sizeof(arr)/sizeof(arr[0]);
    int res = search(arr, size, x);
    if(res ==  -1) 
        cout << x<< " is not found " ;
        else
        cout <<x<< "  is found at the index: " <<res << endl;


    return 0;
}
